version: 2.1
orbs:
  slack: circleci/slack@4.4.4
jobs:
  example-job:
   docker:
     # replace with your preferred image
     - image: cimg/base:stable
   steps:
     
     - slack/notify:
         event: fail
         template: basic_fail_1
     - slack/notify:
         event: pass
         template: success_tagged_deploy_1

  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
#      - restore_cache:
#          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build
      
            
  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      
      - run:
          name: Back-end build
          command: |
             cd backend
             npm install
             npm run build
      
      
      


      - save_cache:
          paths: [backend/node_modules]
          key: backend-build      
  test-frontend:
    docker:
      - image: circleci/node:13.8.0
      # Docker image here
    steps:
      - checkout
      - run: 
          name: Test the fontend
          command: |
            cd frontend
            npm install
            npm run test
  

  test-backend:
    docker:
      - image: circleci/node:13.8.0
      # Docker image here
    steps:
      - checkout
      - run: 
          name: Test the backend
          command: |
            cd backend
            npm install
            npm run test

      # Restore from cache
      # Your job code here
  
  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: 
          name: audit the frontend code
          command: |
            cd frontend
            npm install
            npm audit fix --audit-level=critical --force
            
            npm audit --audit-level=critical
  
  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: 
          name: audit the backend code
          command: |
            cd backend
            npm install
            npm audit fix --audit-level=critical --force
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
  

  


workflows:
  hello:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires:
            - build-frontend
      - test-backend:
          requires:
            - "build-backend"
      - scan-frontend:
          requires:
            - "build-frontend"
      - scan-backend:
          requires:
            - "build-backend"
      - example-job: 
          requires:
            - "build-backend"
            - "build-frontend"

